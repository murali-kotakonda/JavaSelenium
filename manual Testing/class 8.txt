Role of Tester in SDLC:
---------------------------
-->Analysis:
	-Understand requirements/Feasiability.
	-detail study of Risk analysis.
	-identify loop holes,gaps 
	-identify the type of testing to be done .
	[EX:load testing,security testing]
	- Document the requirements.
	-establish the environment requirements.


Design/Test planning:
	-to understand non-funtional requirements(security,hacking,load,perf,).
	-prepare the low-level test plan document
	 a) when testing starts
	 b) on which env
	 c) types of testing
	(risk,tools,env,security,scope, assumptions,).

  After test planning:
	-write the test cases covering all postive and negative for the requirement ,followed by review with devs and qa lead.
	-share the test cases/use cases document to developers  followed by review. 
	-prepare the environment .ex: 
	1.create 1lakh records in db for testing
	2.create types of users for the applciation.

		load testing:
		-----------------
		Test 
		login with single user admin and admin
		-> with 100 users
		-> with 200 users
		-> with 500 users
		-> with 1000 users
		-> with 1 lakh users
		
		login with 100 users  at the same time
		-> with 100 users
		-> with 200 users
		-> with 500 users
		-> with 1000 users
		-> with 1 lakh users
		
		login with 1000 users  at the same time
		-> with 100 users
		-> with 200 users
		-> with 500 users
		-> with 1000 users
		-> with 1 lakh users
		
		login with 5000 users  at the same time
		-> with 100 users
		-> with 200 users
		-> with 500 users
		-> with 1000 users
		-> with 1 lakh users
		
		
		login with 1 lakh users  at the same time
		-> with 100 users
		-> with 200 users
		-> with 500 users
		-> with 1000 users
		-> with 1 lakh users

Testing:
------------------------------------
1.Start testing the application using the test case document.
	Testing can be manual or automation.

	Manual:
	------------
	- For New Requirements/features.
	- Test the scenarios that cannot be covered through the automation

	Automation:
	-------------
	- All the existing test cases

	2.verify if the application is behaving as mentioned in the test document.
	3.create defect if app failed to behave as mentioned in the test cases.
	4.Identify all possible bugs are document the defects in the defcet tracking tool (ex:jira) and report to the team.
	5.Every defect created by tester should contain:
	- detailed steps to be followed for reproducing the issue.
	- what is expected and what is the actual from application.
	- priority (high/medium/low/very high)
	- Log statements.
	- Enviroment(sandbox/commit/live).
	- which browser 
	- what is the test data or request data used in the scenario.
	- screenshots
	7.conduct all different types of testing and check for defects.
	8. make sure all the defects are addressed before the release.
	9.generate the test report and share with team.
	[
	JIRA tool requires below info:
	->Problem description:
	->Steps to reproduce the issue(incl. used data and/or business documents numbers):
	->Additional information to reproduce the issue, e.g. server, browser version, operating system, ...
	]
	










