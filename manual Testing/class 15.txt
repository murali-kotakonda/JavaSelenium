Functional Testing:
----------------------
Functional Testing is a type of Software Testing in which the system is tested against the functional requirements and specifications. 
Functional testing ensures that the application properly satisfies the requirements or specifications. This type of testing is particularly concerned with the result of processing.

Functional Testing Process: Typical Steps
Step 1 – Requirements Analysis. Understand and analyze the functional requirements of the software.
Step 2 – Test Planning. ...
Step 3 – Test Case Design. ...
Step 4 – Test Data Preparation. ...
Step 5 – Execute Tests. ...
Step 6 – Compare Results. ...
Step 7 – Test Reports.

-> done by tester.
-> blackbox testing
test based on the requirement sepcified during the analysis.
check the behaviour of system.



Funtional testing:
------------------
->Test New Features (using test cases)
-> Test Defects  (ReTesting )
-> existing features(regression)
-> Before Regression perform sanity + smoke


Test strategy:
---------------------------
 a) the new features(Test cases V-12 ) + ->Manual
 b) Defects(retesting Issues till v-11). ->Manual
 c) existing features(regression v-11)  ->manual/AUtomation . But preferred automation.


Regression Testing:
--------------------
Regression testing is a black box testing technique. 
For any change in the software,  Regression testing has to ensure there is no  impact in the existing functionality of the product. 
Regression testing is making sure that the product works fine with new functionality, bug fixes, or any change in the existing feature.


Techniques for the selection of Test cases for Regression Testing
* Select all test cases:  
* Select test cases randomly:  
* Select modification traversing test cases: In this technique, only those test cases are selected that cover and test the modified portions of the source code and the parts that are affected by these modifications.
* Select higher priority test cases:  


a)Testing the existing/already delivered features.
b)Regression testing is required always:
-> Defect fix
-> New feature development
-> Performance fixes.
c) Adv: Avoids the side effects due to new features.
New feature should not break the existing features.
-> Regression is costly + time taking
-> Regression should be before the release to the customer.
-> Regression is per release.


ReTesting:
-----------
Retesting is testing only the area where issue/defect exists.
After Retesting we need to do the Regression Testing.

-> a) Tester created defect for login scenario
   b) Dev will fix the issue  and will assign defect back to tester for confirmation.
   c)Tester will retest only the login scenario.
   d) Tester closes the defect and repeat the same for all defects
   e) Perform Regression Testing before the delivery.

   
 Monkey Testing:
 ----------------
  -Test without testcase and without prior knowledge of the application.
  -create defect for any flaw identified.


Smoke Testing and Sanity Testing:
-------------------------------------

Smoke:
-------
- mostly done using the tool.
- Build verification testing.
- check if the new build is stable.
- verify the app lauched successfully or is the deployment success and check  installation is proper or check if the pages are responsive (in time/not at all).
- verify critical funtionality.
->Minor changes/fixes .
->if Smoke fails , then no need to go for regresion and create HIGH defect.


Regression is costly + time consuming.
Perf testing follows after Regression.

Sanity :
-----------
->UAT TESTING done by tester.
->basic navigation, basic flow testing .
->Minor changes/fixes .
->if sanity fails , then no need to go for regresion and create defect.


Order:
--------
-> Test New Features (using test cases)
-> Test Defects  (ReTesting )
-> Regression  ------> Heavy + costly + time consuming.
-> Non Funtional Testing
-> UAT (customer)

Inroduce additional testing for Time saving:
-> Test New Features (using test cases)
-> Test Defects (ReTesting)
-> Smoke + Sanity Testing 
-> Regression  ------> Heavy + costly + time consuming.
-> Non Funtional Testing
-> UAT (customer)


 


